name: Deploy SAARCISinistres

on:
  workflow_run:
    workflows: ["Tests SAARCISinistres"]
    types: [completed]
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Configuration
            PROJECT_DIR="/var/www/sinistres.saarassurancesci.com/saarsinistre"
            BACKUP_DIR="/var/www/sinistres.saarassurancesci.com/backups/saarsinistre"
            TIMESTAMP=$(date +%Y%m%d_%H%M%S)
            
            # Cr√©er le r√©pertoire de backup s'il n'existe pas
            sudo mkdir -p $BACKUP_DIR
            
            # Sauvegarder la version actuelle
            echo "üîÑ Sauvegarde de la version actuelle..."
            sudo cp -r $PROJECT_DIR $BACKUP_DIR/backup_$TIMESTAMP
            
            # Arr√™ter les services temporairement
            echo "‚è∏Ô∏è Arr√™t des services..."
            sudo systemctl stop nginx
            sudo systemctl stop php8.4-fpm
            
            # Nettoyer les caches
            echo "üßπ Nettoyage des caches..."
            cd $PROJECT_DIR
            sudo -u www-data php artisan cache:clear
            sudo -u www-data php artisan config:clear
            sudo -u www-data php artisan route:clear
            sudo -u www-data php artisan view:clear
            
            # Mettre √† jour le code
            echo "üì• Mise √† jour du code..."
            cd $PROJECT_DIR
            sudo -u www-data git fetch origin
            sudo -u www-data git reset --hard origin/main
            
            # Installer les d√©pendances
            echo "üì¶ Installation des d√©pendances..."
            sudo -u www-data composer install --no-dev --optimize-autoloader
            sudo -u www-data npm ci
            sudo -u www-data npm run build
            
            # Ex√©cuter les migrations
            echo "üóÑÔ∏è Ex√©cution des migrations..."
            sudo -u www-data php artisan migrate --force
            
            # Optimiser l'application
            echo "‚ö° Optimisation de l'application..."
            sudo -u www-data php artisan config:cache
            sudo -u www-data php artisan route:cache
            sudo -u www-data php artisan view:cache
            
            # Red√©marrer les services
            echo "üîÑ Red√©marrage des services..."
            sudo systemctl start php8.4-fpm
            sudo systemctl start nginx
            
            # Red√©marrer les queues
            echo "üîÑ Red√©marrage des queues..."
            sudo -u www-data php artisan queue:restart
            
            # V√©rifier le statut
            echo "‚úÖ V√©rification du statut..."
            sudo systemctl status nginx --no-pager
            sudo systemctl status php8.4-fpm --no-pager
            
            echo "üéâ D√©ploiement termin√© avec succ√®s !"
            echo "üìÅ Backup disponible dans: $BACKUP_DIR/backup_$TIMESTAMP"
        
      - name: Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # V√©rifier que l'application r√©pond
            echo "üîç V√©rification de l'application..."
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost)
            
            if [ "$HTTP_STATUS" = "200" ]; then
              echo "‚úÖ Application accessible (HTTP $HTTP_STATUS)"
            else
              echo "‚ùå Application non accessible (HTTP $HTTP_STATUS)"
              echo "üîÑ Tentative de rollback..."
              
               # Rollback automatique
               PROJECT_DIR="/var/www/sinistres.saarassurancesci.com/saarsinistre"
               BACKUP_DIR="/var/www/sinistres.saarassurancesci.com/backups/saarsinistre"
              LATEST_BACKUP=$(ls -t $BACKUP_DIR/backup_* | head -n1)
              
              if [ -n "$LATEST_BACKUP" ]; then
                echo "üîÑ Restauration depuis: $LATEST_BACKUP"
                sudo rm -rf $PROJECT_DIR
                sudo cp -r $LATEST_BACKUP $PROJECT_DIR
                sudo chown -R www-data:www-data $PROJECT_DIR
                sudo systemctl restart nginx
                sudo systemctl restart php8.4-fpm
                echo "‚úÖ Rollback termin√©"
              else
                echo "‚ùå Aucun backup disponible pour le rollback"
              fi
              
              exit 1
            fi
