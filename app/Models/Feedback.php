<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;

class Feedback extends Model
{
    protected $fillable = [
        'sinistre_id',
        'assure_id',
        'note_service',
        'humeur_emoticon',
        'commentaire',
        'date_feedback',
        'envoye_automatiquement'
    ];

    protected $casts = [
        'date_feedback' => 'datetime',
        'envoye_automatiquement' => 'boolean',
    ];

    /**
     * Relation avec le sinistre
     */
    public function sinistre(): BelongsTo
    {
        return $this->belongsTo(Sinistre::class);
    }

    /**
     * Relation avec l'assur√©
     */
    public function assure(): BelongsTo
    {
        return $this->belongsTo(User::class, 'assure_id');
    }

    /**
     * Obtenir le libell√© de l'humeur
     */
    public function getHumeurLibelleAttribute(): string
    {
        $humeurs = [
            'üòä' => 'Tr√®s satisfait',
            'üôÇ' => 'Satisfait',
            'üòê' => 'Neutre',
            'üòï' => 'M√©content',
            'üò†' => 'Tr√®s m√©content'
        ];

        return $humeurs[$this->humeur_emoticon] ?? $this->humeur_emoticon;
    }

    /**
     * Obtenir la couleur de l'humeur
     */
    public function getHumeurCouleurAttribute(): string
    {
        $couleurs = [
            'üòä' => 'green',
            'üôÇ' => 'blue',
            'üòê' => 'yellow',
            'üòï' => 'orange',
            'üò†' => 'red'
        ];

        return $couleurs[$this->humeur_emoticon] ?? 'gray';
    }

    /**
     * Obtenir le libell√© de la note de service
     */
    public function getNoteServiceLibelleAttribute(): string
    {
        $notes = [
            1 => 'Tr√®s m√©content',
            2 => 'M√©content',
            3 => 'Neutre',
            4 => 'Satisfait',
            5 => 'Tr√®s satisfait'
        ];

        return $notes[$this->note_service] ?? 'Non not√©';
    }
}
