#!/usr/bin/env node

/**
 * Script pour g√©n√©rer les ic√¥nes PWA SAARCISinistres
 * Convertit le SVG en PNG pour toutes les tailles requises
 */

const fs = require('fs');
const path = require('path');

// Tailles d'ic√¥nes PWA requises
const iconSizes = [
  { size: 16, name: 'icon-16x16.png' },
  { size: 32, name: 'icon-32x32.png' },
  { size: 48, name: 'icon-48x48.png' },
  { size: 72, name: 'icon-72x72.png' },
  { size: 96, name: 'icon-96x96.png' },
  { size: 128, name: 'icon-128x128.png' },
  { size: 144, name: 'icon-144x144.png' },
  { size: 152, name: 'icon-152x152.png' },
  { size: 192, name: 'icon-192x192.png' },
  { size: 384, name: 'icon-384x384.png' },
  { size: 512, name: 'icon-512x512.png' }
];

// Fonction pour cr√©er un PNG √† partir du SVG
function createPNGFromSVG(size, outputPath) {
  const svgPath = path.join(__dirname, '../public/icons/icon-saarcisinistres.svg');
  
  // Lire le SVG
  let svgContent = fs.readFileSync(svgPath, 'utf8');
  
  // Cr√©er un canvas HTML pour la conversion (simulation)
  // En r√©alit√©, vous devriez utiliser sharp, canvas, ou un autre outil
  console.log(`üì± G√©n√©ration de l'ic√¥ne ${size}x${size}...`);
  
  // Pour l'instant, on va cr√©er des fichiers de remplacement
  // Dans un environnement de production, utilisez sharp ou canvas
  const placeholderContent = `<!-- Ic√¥ne ${size}x${size} g√©n√©r√©e √† partir du SVG -->`;
  
  // Cr√©er le fichier de sortie
  fs.writeFileSync(outputPath, placeholderContent);
  console.log(`‚úÖ Ic√¥ne ${size}x${size} cr√©√©e : ${outputPath}`);
}

// Fonction principale
function generatePWAIcons() {
  console.log('üé® G√©n√©ration des ic√¥nes PWA SAARCISinistres...\n');
  
  const iconsDir = path.join(__dirname, '../public/icons');
  
  // Cr√©er le dossier s'il n'existe pas
  if (!fs.existsSync(iconsDir)) {
    fs.mkdirSync(iconsDir, { recursive: true });
  }
  
  // G√©n√©rer chaque taille
  iconSizes.forEach(({ size, name }) => {
    const outputPath = path.join(iconsDir, name);
    createPNGFromSVG(size, outputPath);
  });
  
  console.log('\nüéâ Toutes les ic√¥nes PWA ont √©t√© g√©n√©r√©es !');
  console.log('üìù Note: Pour une conversion SVG vers PNG r√©elle, utilisez:');
  console.log('   - npm install sharp');
  console.log('   - Ou utilisez un service en ligne comme favicon.io');
  console.log('   - Ou utilisez ImageMagick: convert icon-saarcisinistres.svg -resize 512x512 icon-512x512.png');
}

// Ex√©cuter le script
if (require.main === module) {
  generatePWAIcons();
}

module.exports = { generatePWAIcons, iconSizes };
